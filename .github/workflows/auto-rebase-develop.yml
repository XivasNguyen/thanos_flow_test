name: Auto Rebase Develop

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  rebase-develop:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch develop branch
        run: |
          git fetch origin develop
          git checkout develop

      - name: Rebase develop onto main
        id: rebase
        run: |
          set +e
          git rebase origin/main
          echo "REBASE_EXIT_CODE=$?" >> $GITHUB_ENV
          set -e

      - name: Push changes if rebase successful
        if: env.REBASE_EXIT_CODE == '0'
        run: |
          git push origin develop

      - name: Get PR creator
        if: env.REBASE_EXIT_CODE != '0'
        id: pr_creator
        run: |
          echo "pr_creator=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT

      - name: Read Slack map JSON
        if: env.REBASE_EXIT_CODE != '0'
        id: read_slack_map
        run: |
          echo "map=$(cat .github/slack-map.json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        if: env.REBASE_EXIT_CODE != '0'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":warning: Conflict detected when rebasing develop onto main!",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš¨ Conflict Detected: develop vs main!",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*<@${{ fromJson(steps.read_slack_map.outputs.map)[steps.pr_creator.outputs.pr_creator] }}>*, you merged a PR into *main* that caused a conflict when auto-rebasing into *develop*."
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*How to resolve:*\n```bash\n# 1. Checkout develop and pull latest\n git checkout develop && git pull origin develop\n\n# 2. Create a temp branch\n git checkout -b resolve-conflict\n\n# 3. Merge main into this branch\n git merge origin/main\n\n# 4. Resolve conflicts, commit, and push\n git add .\n git commit -m \"Resolve conflict: merge main into develop\"\n git push origin resolve-conflict\n\n# 5. Open a PR from resolve-conflict to develop for review and merge\n```\nOnce merged, auto-rebase will work again! :rocket:"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
