name: Auto Rebase Develop

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  rebase-develop:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch develop branch
        run: |
          git fetch origin develop
          git checkout develop

      - name: Rebase develop onto main
        id: rebase
        run: |
          set +e
          git rebase origin/main
          echo "REBASE_EXIT_CODE=$?" >> $GITHUB_ENV
          set -e

      - name: Push changes if rebase successful
        if: env.REBASE_EXIT_CODE == '0'
        run: |
          git push origin develop

      - name: Get PR creator from last commit on main
        if: env.REBASE_EXIT_CODE != '0'
        id: pr_creator
        uses: actions/github-script@v7
        with:
          script: |
            const commitSha = (await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'main'
            })).data.sha

            const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commitSha
            })

            if (prs.data.length === 0) {
              core.setFailed('❌ No PR found for last commit.')
            } else {
              const prCreator = prs.data[0].user.login
              console.log(`PR creator login: ${prCreator}`)
              core.setOutput('pr_creator', prCreator)
            }

      - name: Read Slack map JSON
        if: env.REBASE_EXIT_CODE != '0'
        id: read_slack_map
        run: |
          echo "map=$(cat .github/slack-map.json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        if: env.REBASE_EXIT_CODE != '0'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "⚠️ *Conflict when rebasing develop onto main!*\nResponsible: <@${{ fromJson(steps.read_slack_map.outputs.map)[steps.pr_creator.outputs.pr_creator] }}>.\nPlease resolve manually:\n1️⃣ Checkout *develop*\n2️⃣ Run: `git fetch && git rebase origin/main`\n3️⃣ Resolve conflicts, commit & push."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
